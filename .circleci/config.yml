version: 2.1

jobs:
  build-and-test:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          PG_HOST: 127.0.0.1
      - image: circleci/postgres:9.6-alpine
    steps:
      - checkout
      - restore_cache:
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
      - run:
          name: Build
          command: mvn -B -DskipTests clean package -T 1C
      - run:
          name: Get Postgress Image
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
                   && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
                   && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for getting db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: sudo apt update && sudo apt install postgresql-client
#      - run: psql -U postgres -c "create database postgres"
      - run:
          name: Tests
          command: mvn -Dspring.profiles.active=circleci-test test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
         path: ~/test-results
      - store_artifacts:
         path: ~/test-results/junit

workflows:
  sample:
    jobs:
      - build-and-test
